// optimal approach
bool hasCycle(ListNode *head) {               // tc is o(n) and sc is o(1)
        if(head==NULL || head->next==NULL)
          return false;

         ListNode* fast= head;
         ListNode* slow= head;

         while(fast->next && fast->next->next){
             fast= fast->next->next;
             slow= slow->next;
             if(fast==slow)
             return true;
         } 
         return false;
    }
}

// brute force approach
hashing use where the tc is o(n) and sc is o(n) 
